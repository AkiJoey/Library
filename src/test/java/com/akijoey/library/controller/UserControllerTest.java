package com.akijoey.library.controller;

import com.akijoey.library.util.MockUtil;
import com.akijoey.library.util.TokenUtil;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.restdocs.RestDocumentationContextProvider;
import org.springframework.restdocs.RestDocumentationExtension;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.WebApplicationContext;

import java.util.Base64;
import java.util.Map;

@SpringBootTest
@ExtendWith({RestDocumentationExtension.class, SpringExtension.class})
class UserControllerTest {

    private static final String PREFIX = "/api/user";

    @Autowired
    TokenUtil tokenUtil;

    @Autowired
    MockUtil mockUtil;

    private MockMvc mockMvc;

    @BeforeEach
    public void setUp(WebApplicationContext webApplicationContext, RestDocumentationContextProvider restDocumentation) {
        mockMvc = mockUtil.setUp(webApplicationContext, restDocumentation);
    }

    @Test
    @Transactional
    void register() throws Exception {
        String url = PREFIX + "/register";
        Map<String, Object> data = Map.of("username", "test", "password", 123456);
        mockUtil.mockPost(mockMvc, url, data);
    }

    @Test
    void login() throws Exception {
        String url = PREFIX + "/login";
        Map<String, Object> data = Map.of("username", "user", "password", 123456);
        mockUtil.mockPost(mockMvc, url, data);
        tokenUtil.removeToken("user");
    }

    @Test
    void getInfo() throws Exception {
        String url = PREFIX + "/info";
        mockUtil.mockGet(mockMvc, "user", url);
    }

    @Test
    void getMajor() throws Exception {
        String url = PREFIX + "/major";
        mockUtil.mockGet(mockMvc, "user", url);
    }

    @Test
    @Transactional
    void report() throws Exception {
        String url = PREFIX + "/report";
        Map<String, Object> data = Map.of("username", "user", "phone", "18820188310", "address", "china");
        mockUtil.mockPost(mockMvc, "user", url, data);
    }

    @Test
    void replace() throws Exception {
        String url = PREFIX + "/replace";
        String avatar = "";
        byte[] content = Base64.getDecoder().decode(avatar);
        MockMultipartFile file = new MockMultipartFile("avatar", "avatar.png", "multipart/form-data", content);
        mockUtil.mockFileUpload(mockMvc, "user", url, file);
    }

    @Test
    void logout() throws Exception {
        String url = PREFIX + "/logout";
        mockUtil.mockPost(mockMvc, "user", url);
    }

    @Test
    @WithMockUser(roles = { "ADMIN" })
    void getTotal() throws Exception {
        String url = PREFIX + "/total";
        mockUtil.mockGet(mockMvc, url);
    }

    @Test
    @WithMockUser(roles = { "ADMIN" })
    void getTable() throws Exception {
        String url = PREFIX + "/table/{page}/{size}";
        mockUtil.mockGet(mockMvc, url, 1, 10);
    }

    @Test
    void getDetail() throws Exception {
        String url = PREFIX + "/detail";
        Map<String, Object> data = Map.of("id", 1);
        mockUtil.mockPost(mockMvc, "admin", url, data);
    }

    @Test
    void upload() throws Exception {
        String url = PREFIX + "/upload";
        String avatar = "";
        byte[] content = Base64.getDecoder().decode(avatar);
        MockMultipartFile file = new MockMultipartFile("avatar", "avatar.png", "multipart/form-data", content);
        mockUtil.mockFileUpload(mockMvc, "admin", url, file);
    }

    @Test
    @Transactional
    void update() throws Exception {
        String url = PREFIX + "/update";
        Map<String, Object> data = Map.of("username", "user", "phone", "18820188310", "address", "china");
        mockUtil.mockPost(mockMvc, "admin", url, data);
    }

    @Test
    @Transactional
    void passwd() throws Exception {
        String url = PREFIX + "/passwd";
        Map<String, Object> data = Map.of("oldPassword", "123456", "newPassword", "123456789");
        mockUtil.mockPost(mockMvc, "admin", url, data);
    }

    @Test
    @Transactional
    @WithMockUser(roles = { "ADMIN" })
    void initialize() throws Exception {
        String url = PREFIX + "/initialize";
        Map<String, Object> data = Map.of("id", 1, "password", "123456789");
        mockUtil.mockPost(mockMvc, url, data);
    }

    @Test
    @Transactional
    @WithMockUser(roles = { "ADMIN" })
    void enable() throws Exception {
        String url = PREFIX + "/enable";
        Map<String, Object> data = Map.of("id", 1);
        mockUtil.mockPost(mockMvc, url, data);
    }

}